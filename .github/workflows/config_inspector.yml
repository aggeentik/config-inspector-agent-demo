name: Streetrace Config Inspector

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  streetrace-config-inspector:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    if: github.actor != 'dependabot[bot]'

    steps:
      - name: Checkout Streetrace code
        uses: actions/checkout@v4
        with:
          repository: streetrace-ai/streetrace
          path: streetrace
          fetch-depth: 0
          ref: demo/config-inspector-agent-83

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
    
      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Setup environment
        working-directory: streetrace
        run: |
          set -euo pipefail
          echo "Installing MCP servers..."
          npm install -g @modelcontextprotocol/server-filesystem
          
          echo "Configuring Poetry..."
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
          
          echo "Installing dependencies..."
          poetry install
          echo "Environment setup complete!"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@main
        with:
            role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/GitHubActionsStreetraceRole
            aws-region: us-east-1

      - name: Checkout project code
        uses: actions/checkout@v4
        with:
          repository: streetrace-ai/config-inspector-agent-demo
          path: project
          fetch-depth: 0
          ref: change/CHANGE-1-UPDATE-PAYMENT-SVC

      - name: Run Config Review
        working-directory: streetrace
        timeout-minutes: 10
        env:
          AZURE_API_BASE: ${{ secrets.AZURE_API_BASE }}
          AZURE_API_KEY: ${{ secrets.AZURE_API_KEY }}
          AZURE_API_VERSION: ${{ secrets.AZURE_API_VERSION }}
          AWS_PROFILE: default
          GH_TOKEN: ${{ github.token }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          BASE_REF: ${{ github.event.pull_request.base.ref }}
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
          STREETRACE_MODEL: ${{ vars.STREETRACE_MODEL || 'azure/gpt-4o' }}
        run: |
          poetry run streetrace \
            --model="$STREETRACE_MODEL" \
            --agent=config_inspector \
            --path="$GITHUB_WORKSPACE/project/" \
            --verbose \
            --prompt="CRITICAL: You MUST create the file config-review-result.md using write_file tool. This is mandatory - the workflow will fail without it. Conduct a configuration changes analysis of PR $PR_TITLE-$PR_NUMBER and save ALL results to this file. Verify file creation with read_file. Do not print to console." \
            || echo "StreetRace completed with exit code $?"
      
      - name: Tail streetrace.log
        working-directory: streetrace
        run: |
          tail streetrace.log

      - name: Format review
        working-directory: project
        run: |
          if [ -f "config-review-result.md" ]; then
            {
              echo "## 🔍 StreetRace Config Inspector Review"
              echo ""
              cat config-review-result.md
              echo ""
              echo "---"
              echo "*Review generated by [StreetRace](https://github.com/streetrace-ai/streetrace) AI*"
            } > formatted-review.md
          fi

      - name: Post review comment
        if: always() && hashFiles('project/formatted-review.md') != ''
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          number: ${{ github.event.pull_request.number }}
          header: streetrace-config-inspector
          path: project/formatted-review.md
   